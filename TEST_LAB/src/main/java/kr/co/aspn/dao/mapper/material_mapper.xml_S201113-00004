<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="material">
<!-- 怨듯넻 議곌굔 -->
	<sql id="whereMaterialList">
		<choose>
			<when test='isSample == "" or isSample == null '>
				AND ( (plant = '8400' and sapCode like '%') or ( plant != '8400') and (sapCode not like '1' or sapCode not like '8') )
			</when>
			<when test='isSample == "N"'>
				AND isSample = 'N'
				AND ( (plant = '8400' and sapCode like '%') or ( plant != '8400') and (sapCode not like '1' or sapCode not like '8') )
			</when>
			<when test='isSample == "Y"'>
				AND isSample = 'Y'
			</when>
		</choose>	
		<if test="searchCompany != null and searchCompany != '' ">
		AND company = #{searchCompany}
		</if>
		<if test="searchPlant != null and searchPlant != '' ">
		AND plant = #{searchPlant}
		</if>
		<if test="searchType != null and searchType != '' ">
		<choose>
			<when test="searchType.equals('sapCode')">
			AND sapCode LIKE '%'+#{searchValue}+'%'
			</when>
      		<when test="searchType.equals('name')">
      		AND name LIKE '%'+#{searchValue}+'%'
      		</when>
      		<when test="searchType.equals('regUserName')">
			AND regUserId IN (  SELECT userId FROM userTable WHERE userName LIKE '%'+#{searchValue}+'%' )
			</when>
      	</choose>
		</if>
		AND isDelete = 'N'
	</sql>
	<select id="materialTotalCount" parameterType="map" resultType="int">
		/** material.materialTotalCount */
		SELECT COUNT(imNo)
	 		FROM material m
	 		INNER JOIN plant p
			ON		m.plant = p.plantCode
	 		WHERE 1=1
	 		<include refid="material.whereMaterialList" />
	</select>
	
	<select id="materialList" parameterType="MaterialVO" resultType="MaterialVO">
	/** material.materialList */
	SELECT imNo
	      ,sapCode
	      ,name
	      ,plant
	      ,plantName
	      ,ROUND(ISNULL(price, 0),5) as price
	      ,regUserId
	      ,regUserName
	      ,unit
	      ,exitUnit
	      ,isDelete
	      ,isSample
	      ,type
	      ,regDate
	      ,modUserId
	      ,modUserName
	      ,company
	      ,companyName
	      ,isHidden
	      ,supplyDate
		  ,supplyCompany
	 FROM (
		SELECT 
			row_number() over (order by  supplyDate DESC, regDate DESC, imNo desc) as rnum
			,imNo
			,sapCode
		    ,name
		    ,plant
		    ,dbo.getPlantName(company,plant) as plantName
		    ,price
		    ,regUserId
		    ,dbo.getUserName(regUserId) as regUserName
		    ,unit
		    ,exitUnit
		    ,isDelete
		    ,isSample
		    ,type
		    ,convert(varchar(10), regDate, 120) as regDate
		    ,modUserId
		    ,dbo.getUserName(modUserId) as modUserName
		    ,company
		    ,dbo.getCompanyName(company) as companyName
		    ,isHidden
		    ,supplyDate
			,supplyCompany
		FROM material m
		INNER JOIN plant p
			ON		m.plant = p.plantCode
		WHERE 1=1
		<include refid="material.whereMaterialList" />
	) tmp WHERE rnum between #{startRow} and #{endRow}
    </select>
    
    <select id="materialCount" parameterType="map" resultType="int">
		/** material.materialCount */
		SELECT COUNT(imNo)
	 		FROM material
	 		WHERE 1=1
	 			AND plant not in('7300')
	 		<if test="sapCode != null and sapCode != ''">
			AND sapCode = #{sapCode}
			</if>
			<if test="company != null and company != ''">
			AND company = #{company}
			</if>
			<if test="plant != null and plant != ''">
			AND plant = #{plant}
			</if>
	</select>
	
	<insert id="insert" parameterType="MaterialVO">
		/** material.insert */
		INSERT
			INTO material
		(
			sapCode
			,name
			,plant
			,price
			,regUserId
			,unit
			,isDelete
			,isSample
			,isHidden
			,type
			,regDate
			,company
		) VALUES (
			#{sapCode}
			,#{name}
			,#{plant}
			,#{price}
			,#{regUserId}
			,#{unit}
			,'N'
			,'Y'
			,'N'
			,#{type}
			,getdate()
			,#{company}
		)
	</insert>
	
	<select id="countByKey" parameterType="String" resultType="int">
	/** material.countByKey */
	SELECT COUNT(imNo)
	FROM material
	WHERE 1=1
	AND imNo = #{imNo}
	AND isSample = 'Y'
	</select>
	
	<update id="deleteAjax" parameterType="String">
		DELETE FROM material
		WHERE imNo = #{imNo}
	</update>
	
	<select id="usedCount" parameterType="String" resultType="int">
	/** material."usedCount" */
	SELECT			
		count(mi.dNo) + (select	count(d.ddNo)
						from material i
							inner join devDoc d
							on i.sapCode = d.productCode
						where i.imNo = #{imNo}) as cnt
	FROM material i
	INNER JOIN manufacturingProcessDocItem mi
	ON	i.sapCode = mi.itemCode
	INNER JOIN manufacturingProcessDoc m
	ON mi.dNo = m.dNo
	WHERE i.imNo = #{imNo}
	</select>
	
	<update id="hiddenAjax" parameterType="map">
	/** material.hiddenAjax  */
		UPDATE material
		SET
			isHidden = #{isHidden}
			,modUserId = #{modUserId}
		WHERE imNo = #{imNo}
	</update>
	
	<update id="insertErpData" parameterType="map">
		MERGE material AS T   
		USING (SELECT #{MATNR}, #{WERKS}, #{company}) AS S (sapCode, plant,company)  
		ON	T.sapCode = S.sapCode 
			AND T.plant = S.plant 
			AND T.company = S.company
		WHEN MATCHED THEN 
			UPDATE SET	
				name=#{MAKTX}, 
				price=CONVERT(float,#{DANGA})*100, 
				unit=#{MEINS},
				exitUnit=#{AUSME},
				type=#{type},
				isDelete=#{isDelete},
				isSample='N',	
				regUserId=#{user},	
				supplyDate=#{BEDAT},
				supplyCompany=#{NAME1},
				regDate=getdate()  
		WHEN NOT MATCHED BY TARGET THEN 
			INSERT (
			sapCode
			,name
			,plant
			,price
			,unit
			,exitUnit
			,type
			,isDelete
			,isSample
			,isHidden
			,regUserId
			,regDate
			,company
			,supplyDate
			,supplyCompany
			) 
			VALUES(
			 #{MATNR}
			, #{MAKTX}
			, #{WERKS}
			, CONVERT(float,#{DANGA})*100
			, #{MEINS}
			, #{AUSME}
			, #{type}
			, #{isDelete}
			, 'N'
			, 'N'
			, #{user}
			, getdate()
			, #{company}
			, #{BEDAT}
			, #{NAME1}
			);
	</update>
	
	<select id="materialData" parameterType="map" resultType="MaterialVO">
	/** material.materialData */
		SELECT 
			imNo
			,sapCode
		    ,name
		    ,plant
		    ,dbo.getPlantName(company,plant) as plantName
		    ,price
		    ,regUserId
		    ,dbo.getUserName(regUserId) as regUserName
		    ,unit
		    ,exitUnit
		    ,isDelete
		    ,isSample
		    ,type
		    , case when type = 'B' then '�썝猷�'
					when type = 'R' then '�옱猷�' 
					else '' end typeName 
		    ,convert(varchar(10), regDate, 120) as regDate
		    ,modUserId
		    ,dbo.getUserName(modUserId) as modUserName
		    ,company
		    ,dbo.getCompanyName(company) as companyName
		    ,isHidden
		    ,supplyDate
			,supplyCompany
		FROM material
		WHERE 1=1 
			AND plant not in('7300')
		<if test="imNo != null and imNo != ''">
		AND imNo = #{imNo}
		</if>
    </select>
    
    <update id="update" parameterType="MaterialVO">
		/** material.update */
		UPDATE material
		SET
			sapCode = #{imNo}
      		,name= #{name}
      		,plant = #{plant}
      		,price = #{price}
      		,unit = #{unit}
	      	,type = #{type}
	      	,modUserId = #{modUserId}
	      	,company = #{company}
		WHERE imNo = #{imNo}
	</update>
	
	<select id="itemTotalCount" parameterType="map" resultType="int">
		/** material.itemTotalCount */
		SELECT	
			count(*)
		FROM 
			manufacturingProcessDocItem item
			JOIN devdoc dd 
			ON item.docNo = dd.docNo 
				AND item.docVersion = dd.docVersion 
				AND dd.isClose = 0
			JOIN manufacturingProcessDoc doc
			ON item.dNo = doc.dNo 
				AND item.docNo = doc.docNo 
				AND item.docVersion = doc.docVersion
	  	WHERE	1=1 
	  		<if test="searchCompany != null and searchCompany != '' ">
			AND companyCode = #{searchCompany}
			</if>
			<if test="searchPlant != null and searchPlant != '' ">
			AND plantCode = #{searchPlant}
			</if>
			<if test="searchType != null and searchType != '' ">
			<choose>
				<when test="searchType.equals('itemCode')">
				AND itemCode LIKE '%'+#{searchValue}+'%'
				</when>
	      		<when test="searchType.equals('itemCodeName')">
				AND itemName LIKE '%'+#{searchValue}+'%'
				</when>
	      	</choose>
			</if>
	</select>
	<select id="itemList" parameterType="map" resultType="map">
	/** material.itemList */
		SELECT dNo
			, docNo
			, docVersion
			, itemCode
			, itemName
			, (select top 1 excRate from manufacturingProcessDocDisp where dNo = t.dNo and matName = t.itemName) as 'excRate'
			, dbo.getCompanyName(companyCode) AS companyName
			, plantCode
			, dbo.getPlantName(companyCode, plantCode) AS plantName
			, lineCode
			, lineName
			, productName
			, productCode
		FROM (
			SELECT  
				row_number() over (order by i.dNo desc) as rnum
				, i.dNo
				, i.docNo
				, i.docVersion
				, itemCode
				, itemName
				, companyCode
				, plantCode
				, lineCode
				, lineName
				, productName
				, productCode
			FROM (
				SELECT item.dNo
					, item.docNo
					, item.docVersion
					, itemCode
					, itemName
					, companyCode
					, plantCode
					, lineCode
					, lineName
					, productName
					, productCode
			FROM manufacturingProcessDocItem item
				JOIN devdoc dd
				ON item.docNo = dd.docNo and item.docVersion = dd.docVersion
				JOIN manufacturingProcessDoc doc
				ON item.dNo = doc.dNo
				WHERE 1=1 
					<if test="searchCompany != null and searchCompany != '' ">
					AND companyCode = #{searchCompany}
					</if>
					<if test="searchPlant != null and searchPlant != '' ">
					AND plantCode = #{searchPlant}
					</if>
					<if test="searchType != null and searchType != '' ">
					<choose>
						<when test="searchType.equals('itemCode')">
						AND itemCode LIKE '%'+#{searchValue}+'%'
						</when>
			      		<when test="searchType.equals('itemCodeName')">
						AND itemName LIKE '%'+#{searchValue}+'%'
						</when>
			      	</choose>
					</if>
			) i
		) t
		WHERE rnum between #{startRow} and #{endRow}
	</select>
</mapper>